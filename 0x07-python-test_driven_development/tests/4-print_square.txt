module '`4-print_square'' doctest file

+++++++++++++++++++++++++++++++++++

use of ''print_square''
print a square with the char '#" of length size
_______________________________________________

Import module:
    >>> print_square = __import__('4-print_square').print_square

::

a test print 3:
    >>> print_square(3)
    ###
    ###
    ###

check print 10:
    >>> print_square(10)
    ##########
    ##########
    ##########
    ##########
    ##########
    ##########
    ##########
    ##########
    ##########
    ##########

The parameter ``size`` must be an integer. Otherwise, a TypeError is raised.

::
Test negative:
    >>> print_square(-7)
        Traceback (most recent call last):
	...
	ValueError: size must be >= 0

Test float:
    >>> print_square(5.0)
        Traceback (most recent call last):
	...
	TypeError: size must be an integer

Test str:
    >>> print_square("foo")
        Traceback (most recent call last):
	...
	TypeError: size must be an integer

Test none:
    >>> print_square(None)
        Traceback (most recent call last):
	...
	TypeError: size must be an integer

Test inf:
    >>> print_square(float('inf'))
        Traceback (most recent call last):
	...
	TypeError: size must be an integer

Test nan:
    >>> print_square(float('nan'))
        Traceback (most recent call last):
	...
	TypeError: size must be an integer

Missing one argument:
    >>> print_square()
        Traceback (most recent call last):
	...
	TypeError: print_square() missing 1 required positional argument: 'size'
